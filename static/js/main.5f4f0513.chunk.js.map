{"version":3,"sources":["context/ScoreContext.js","context/PercentContext.js","components/Choices/Choices.component.jsx","components/Question/Question.component.jsx","components/Score/Score.component.jsx","components/Questions/Questions.component.jsx","App.js","index.js"],"names":["ScoreContext","createContext","addScore","PercentContext","percent","addPercent","ChoicesWrapper","styled","div","ChoicesComponent","correctAnswer","answers","useState","isAnswersShown","setAnswersShown","choices","setChoices","useContext","mapNumsToLetters","1","2","3","4","useEffect","_","shuffle","wrongAnswerSoundEffect","document","getElementById","play","correctAnswerSoundEffect","showAnswer","item","backgroundColor","pointerEvents","map","idx","key","onClick","answer","style","toUpperCase","he","unescape","QuestionWrapper","ProgressBar","Line","QuestionComponent","questions","setPercent","colors","strokeWidth","strokeColor","index","category","question","correct_answer","incorrect_answers","border","Math","floor","random","length","Provider","value","wrongAnswers","ScoreWrapper","StyledButton","button","Score","score","fetchQuestionsOnLoad","window","location","reload","LoaderWrapper","Loader","QuestionsComponent","setQuestions","setScore","isLoaded","setIsLoaded","a","fetch","fetchQuestions","json","response","results","type","color","height","width","timeout","App","src","autoPlay","loop","id","AppWrapper","ReactDOM","render"],"mappings":"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","file":"static/js/main.5f4f0513.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst ScoreContext = createContext({addScore: () => {}});\r\n\r\nexport default ScoreContext;\r\n","import { createContext } from 'react';\r\n\r\nconst PercentContext = createContext({\r\n\tpercent: 0,\r\n\taddPercent: () => {},\r\n});\r\n\r\nexport default PercentContext;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport ScoreContext from '../../context/ScoreContext';\r\nimport _ from 'lodash';\r\nimport he from 'he';\r\nimport styled from 'styled-components';\r\nimport PercentContext from '../../context/PercentContext';\r\n\r\nconst ChoicesWrapper = styled.div`\r\n\tborder: 1px solid #444;\r\n\twidth: auto;\r\n\tpadding: 20px 40px;\r\n\tmargin: 10px;\r\n\tborder-radius: 15px;\r\n\tcursor: pointer;\r\n\r\n\t&:hover {\r\n\t\tbackground-color: #e9ebee;\r\n\t\tfont-weight: bold;\r\n\t\ttransition: 0.2ms ease-in-out;\r\n\t}\r\n`;\r\nconst ChoicesComponent = ({ correctAnswer, answers }) => {\r\n\tconst [isAnswersShown, setAnswersShown] = useState(false);\r\n\tconst [choices, setChoices] = useState([]);\r\n\tconst percent = useContext(PercentContext);\r\n\r\n\tconst addScore = useContext(ScoreContext);\r\n\tconst mapNumsToLetters = {\r\n\t\t1: 'a',\r\n\t\t2: 'b',\r\n\t\t3: 'c',\r\n\t\t4: 'd',\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetChoices(_.shuffle(answers));\r\n\t}, []);\r\n\r\n\tconst pickAnswer = (answer, index) => {\r\n\t\tsetAnswersShown(true);\r\n\t\tpercent.addPercent();\r\n\t\tif (answer === correctAnswer) {\r\n\t\t\taddScore();\r\n\t\t\tcorrectAnswerSoundEffect();\r\n\t\t} else {\r\n\t\t\twrongAnswerSoundEffect();\r\n\t\t}\r\n\t};\r\n\r\n\tconst wrongAnswerSoundEffect = () => {\r\n\t\tdocument.getElementById('wrong-answer').play();\r\n\t};\r\n\r\n\tconst correctAnswerSoundEffect = () => {\r\n\t\tdocument.getElementById('correct-answer').play();\r\n\t};\r\n\r\n\tconst showAnswer = item => {\r\n\t\treturn correctAnswer === item\r\n\t\t\t? { backgroundColor: '#458728', pointerEvents: 'none' }\r\n\t\t\t: { backgroundColor: '#BD2A2A', pointerEvents: 'none' };\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{choices.map((item, idx) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ChoicesWrapper\r\n\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\tonClick={() => pickAnswer(item)}\r\n\t\t\t\t\t\tstyle={isAnswersShown ? showAnswer(item) : null}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{mapNumsToLetters[idx + 1].toUpperCase()}.{he.unescape(item)}\r\n\t\t\t\t\t</ChoicesWrapper>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChoicesComponent;\r\n","import React, { useState } from 'react';\r\nimport Choices from '../Choices/Choices.component';\r\nimport he from 'he';\r\nimport styled from 'styled-components';\r\nimport { Line } from 'rc-progress';\r\nimport PercentContext from '../../context/PercentContext';\r\n\r\nconst QuestionWrapper = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\ttext-align: center;\r\n\tflex-direction: column;\r\n\tbackground-color: #fff;\r\n\r\n\t-webkit-box-shadow: 10px 10px 35px -16px rgba(0, 0, 0, 0.75);\r\n\t-moz-box-shadow: 10px 10px 35px -16px rgba(0, 0, 0, 0.75);\r\n\tbox-shadow: 10px 10px 35px -16px rgba(0, 0, 0, 0.75);\r\n\tpadding: 20px;\r\n\tborder-radius: 20px;\r\n\tmargin: 20px;\r\n\tmargin-bottom: 50px;\r\n\r\n\tp {\r\n\t\tword-break: break-word;\r\n\t\tfont-size: 18px;\r\n\t\tcolor: #fff;\r\n\t\tbackground-color: #1b1b1b;\r\n\t\tpadding: 15px;\r\n\t\tborder-radius: 15px;\r\n\t}\r\n\r\n\th3 {\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t}\r\n`;\r\n\r\nconst ProgressBar = styled(Line)`\r\n\tposition: sticky;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n`;\r\n\r\nconst QuestionComponent = ({ questions }) => {\r\n\tconst [percent, setPercent] = useState(0);\r\n\r\n\tconst addPercent = () => {\r\n\t\tsetPercent(percent + 10);\r\n\t};\r\n\r\n\tconst colors = [\r\n\t\t'red',\r\n\t\t'orange',\r\n\t\t'yellow',\r\n\t\t'green',\r\n\t\t'blue',\r\n\t\t'indigo',\r\n\t\t'violet',\r\n\t];\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ProgressBar percent={percent} strokeWidth='2' strokeColor='#00BFFF' />\r\n\t\t\t{questions.map((item, index) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tcategory,\r\n\t\t\t\t\tquestion,\r\n\t\t\t\t\tcorrect_answer,\r\n\t\t\t\t\tincorrect_answers,\r\n\t\t\t\t} = item;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<QuestionWrapper\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborder: `2px solid ${\r\n\t\t\t\t\t\t\t\tcolors[Math.floor(Math.random() * colors.length)]\r\n\t\t\t\t\t\t\t}`,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<h3>{category}</h3>\r\n\t\t\t\t\t\t<p>{he.unescape(question)}</p>\r\n\t\t\t\t\t\t<PercentContext.Provider\r\n\t\t\t\t\t\t\tvalue={{ percent: percent, addPercent: addPercent }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Choices\r\n\t\t\t\t\t\t\t\tcorrectAnswer={correct_answer}\r\n\t\t\t\t\t\t\t\twrongAnswers={incorrect_answers}\r\n\t\t\t\t\t\t\t\tanswers={[correct_answer, ...incorrect_answers]}\r\n\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</PercentContext.Provider>\r\n\t\t\t\t\t</QuestionWrapper>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default QuestionComponent;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ScoreWrapper = styled.div`\r\n\ttext-align: center;\r\n\tborder-radius: 15px;\r\n\tbackground-color: #fff;\r\n\tpadding: 20px 0;\r\n\tmargin-bottom: 20px;\r\n\tborder: 2px solid black;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n\theight: 50px;\r\n\twidth: 100px;\r\n\toutline: none;\r\n\tborder: none;\r\n\tbackground-color: #1b1b1b;\r\n\tcolor: white;\r\n\tpadding: 10px;\r\n\tfont-family: Dank Mono;\r\n\tfont-size: 15px;\r\n\tborder-radius: 15px;\r\n`\r\nconst Score = ({ score, fetchQuestionsOnLoad }) => {\r\n\treturn (\r\n\t\t<ScoreWrapper>\r\n\t\t\t<h1>Score: {score} out of 10</h1>\r\n\t\t\t<StyledButton\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tfetchQuestionsOnLoad();\r\n\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tTry Again\r\n\t\t\t</StyledButton>\r\n\t\t</ScoreWrapper>\r\n\t);\r\n};\r\n\r\nexport default Score;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Question from '../Question/Question.component';\r\nimport Score from '../Score/Score.component';\r\nimport ScoreContext from '../../context/ScoreContext';\r\nimport Loader from 'react-loader-spinner';\r\nimport styled from 'styled-components';\r\n\r\nconst LoaderWrapper = styled(Loader)`\r\n\tmargin-top:300px; \r\n`;\r\n\r\nconst QuestionsComponent = () => {\r\n\tconst [questions, setQuestions] = useState([]);\r\n\tconst [score, setScore] = useState(0);\r\n\tconst [isLoaded, setIsLoaded] = useState(false);\r\n\r\n\tconst addScore = () => {\r\n\t\tsetScore(score + 1);\r\n\t};\r\n\r\n\tconst fetchQuestionsOnLoad = async () => {\r\n\t\tconst fetchQuestions = await fetch(\r\n\t\t\t'https://opentdb.com/api.php?amount=10&type=multiple'\r\n\t\t);\r\n\t\tconst response = await fetchQuestions.json();\r\n\t\tsetQuestions(response.results);\r\n\t\tsetIsLoaded(true);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchQuestionsOnLoad();\r\n\t}, []);\r\n\r\n\treturn isLoaded ? (\r\n\t\t<div>\r\n\t\t\t<ScoreContext.Provider value={addScore}>\r\n\t\t\t\t<Question questions={questions} />\r\n\t\t\t</ScoreContext.Provider>\r\n\t\t\t<Score score={score} fetchQuestionsOnLoad={fetchQuestionsOnLoad} />\r\n\t\t</div>\r\n\t) : (\r\n\t\t\t<LoaderWrapper\r\n\t\t\t\ttype='Puff'\r\n\t\t\t\tcolor='#00BFFF'\r\n\t\t\t\theight={100}\r\n\t\t\t\twidth={100}\r\n\t\t\t\ttimeout={3000}\r\n\t\t\t/>\r\n\t);\r\n};\r\nexport default QuestionsComponent;\r\n","import React from 'react';\r\nimport Questions from './components/Questions/Questions.component';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<audio\r\n\t\t\t\tsrc='https://www.bensound.com/bensound-music/bensound-thejazzpiano.mp3'\r\n\t\t\t\tautoPlay\r\n\t\t\t\tloop\r\n\t\t\t/>\r\n\t\t\t<audio\r\n\t\t\t\tid='wrong-answer'\r\n\t\t\t\tsrc='https://freesound.org/people/KevinVG207/sounds/331912/download/331912__kevinvg207__wrong-buzzer.wav'\r\n\t\t\t/>\r\n\t\t\t<audio\r\n\t\t\t\tid='correct-answer'\r\n\t\t\t\tsrc='https://freesound.org/people/JapanYoshiTheGamer/sounds/361263/download/361263__japanyoshithegamer__8-bit-correct-answer.wav'\r\n\t\t\t/>\r\n\t\t\t<Questions />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport styled from 'styled-components';\r\nconst AppWrapper = styled.div`\r\n\tdisplay: flex;\r\n\theight: auto;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tfont-family: Dank Mono;\r\n`;\r\n\r\nReactDOM.render(\r\n\t<AppWrapper>\r\n\t\t<App />\r\n\t</AppWrapper>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}