{"version":3,"sources":["styled-components/ChoicesWrapper.styledcomponent.jsx","context/ScoreContext.js","context/PercentContext.js","components/Choices/Choices.component.jsx","styled-components/QuestionWrapper.styledcomponent.jsx","styled-components/ProgressBar.styledcomponent.jsx","styled-components/StyledParticles.styledcomponent.jsx","components/Question/Question.component.jsx","styled-components/ScoreWrapper.styledcomponent.jsx","styled-components/StyledButton.styledcomponent.jsx","components/Score/Score.component.jsx","styled-components/LoaderWrapper.styledcomponent.jsx","components/Questions/Questions.component.jsx","components/Milktea/Milktea.component.jsx","App.js","index.js"],"names":["ChoicesWrapper","styled","div","ScoreContext","createContext","score","addScore","PercentContext","percent","addPercent","ChoicesComponent","correctAnswer","answers","useState","isAnswersShown","setAnswersShown","choices","setChoices","useContext","mapNumsToLetters","1","2","3","4","useEffect","_","shuffle","wrongAnswerSoundEffect","document","getElementById","play","correctAnswerSoundEffect","showAnswer","item","backgroundColor","pointerEvents","map","idx","key","onClick","answer","style","toUpperCase","he","unescape","QuestionWrapper","ProgressBar","Line","StyledParticles","Particles","QuestionComponent","questions","colors","styledParticlesOptions","particles","number","value","size","strokeWidth","strokeColor","index","category","question","correct_answer","incorrect_answers","border","Math","floor","random","length","params","wrongAnswers","ScoreWrapper","StyledButton","button","Score","fetchQuestionsOnLoad","history","useHistory","pathname","location","milktea","push","window","reload","display","LoaderWrapper","Loader","QuestionsComponent","setQuestions","isLoaded","setIsLoaded","setScore","setPercent","a","fetch","fetchQuestions","json","response","results","Provider","type","color","height","width","timeout","MilkteaComponent","alt","src","marginTop","App","autoPlay","loop","id","exact","path","component","Questions","Milktea","AppWrapper","ReactDOM","render"],"mappings":"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","file":"static/js/main.4d4e1c1d.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst ChoicesWrapper = styled.div`\r\n\tborder: 1px solid #444;\r\n\twidth: auto;\r\n\tpadding: 20px 40px;\r\n\tmargin: 10px;\r\n\tborder-radius: 15px;\r\n\tcursor: pointer;\r\n\tcolor: #fff;\r\n\tbackground-color: #202E3A;\r\n\t&:hover {\r\n\t\tbackground-color: #e9ebee;\r\n\t\tcolor: #222;\r\n\t\tfont-weight: bold;\r\n\t\ttransition: 0.2ms ease-in-out;\r\n\t}\r\n`;\r\n\r\nexport default ChoicesWrapper;","import { createContext } from 'react';\r\n\r\nconst ScoreContext = createContext({\r\n\tscore: 0,\r\n\taddScore: () => { }\r\n});\r\n\r\n\r\nexport default ScoreContext;\r\n","import { createContext } from 'react';\r\n\r\nconst PercentContext = createContext({\r\n\tpercent: 0,\r\n\taddPercent: () => {},\r\n});\r\n\r\nexport default PercentContext;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\n\r\n// Styled Components Imports\r\nimport ChoicesWrapper from '../../styled-components/ChoicesWrapper.styledcomponent';\r\n\r\n// Context Imports\r\nimport ScoreContext from '../../context/ScoreContext';\r\nimport PercentContext from '../../context/PercentContext';\r\n\r\n// Utility Imports\r\nimport _ from 'lodash';\r\nimport he from 'he';\r\n\r\nconst ChoicesComponent = ({ correctAnswer, answers }) => {\r\n\tconst [isAnswersShown, setAnswersShown] = useState(false);\r\n\tconst [choices, setChoices] = useState([]);\r\n\r\n\tconst percent = useContext(PercentContext);\r\n\tconst score = useContext(ScoreContext);\r\n\r\n\tconst mapNumsToLetters = {\r\n\t\t1: 'a',\r\n\t\t2: 'b',\r\n\t\t3: 'c',\r\n\t\t4: 'd',\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetChoices(_.shuffle(answers));\r\n\t}, []);\r\n\r\n\tconst pickAnswer = (answer, index) => {\r\n\t\tsetAnswersShown(true);\r\n\t\tpercent.addPercent();\r\n\t\tif (answer === correctAnswer) {\r\n\t\t\tscore.addScore();\r\n\t\t\tcorrectAnswerSoundEffect();\r\n\t\t} else {\r\n\t\t\twrongAnswerSoundEffect();\r\n\t\t}\r\n\t};\r\n\r\n\tconst wrongAnswerSoundEffect = () => {\r\n\t\tdocument.getElementById('wrong-answer').play();\r\n\t};\r\n\r\n\tconst correctAnswerSoundEffect = () => {\r\n\t\tdocument.getElementById('correct-answer').play();\r\n\t};\r\n\r\n\tconst showAnswer = item => {\r\n\t\treturn correctAnswer === item\r\n\t\t\t? { backgroundColor: '#458728', pointerEvents: 'none' }\r\n\t\t\t: { backgroundColor: '#BD2A2A', pointerEvents: 'none' };\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{choices.map((item, idx) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ChoicesWrapper\r\n\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\tonClick={() => pickAnswer(item)}\r\n\t\t\t\t\t\tstyle={isAnswersShown ? showAnswer(item) : null}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{mapNumsToLetters[idx + 1].toUpperCase()}.{he.unescape(item)}\r\n\t\t\t\t\t</ChoicesWrapper>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChoicesComponent;\r\n","import styled from 'styled-components';\r\n\r\nconst QuestionWrapper = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\ttext-align: center;\r\n\tflex-direction: column;\r\n\tbackground-color: #253341;\r\n\t-webkit-box-shadow: 10px 10px 35px -16px rgba(0, 0, 0, 0.75);\r\n\t-moz-box-shadow: 10px 10px 35px -16px rgba(0, 0, 0, 0.75);\r\n\tbox-shadow: 10px 10px 35px -16px rgba(0, 0, 0, 0.75);\r\n\tpadding: 20px;\r\n\tborder-radius: 20px;\r\n\tmargin: 20px;\r\n\tmargin-bottom: 50px;\r\n\r\n\tp {\r\n\t\tword-break: break-word;\r\n\t\tfont-size: 18px;\r\n\t\tcolor: #fff;\r\n\t\tbackground-color: #1b1b1b;\r\n\t\tpadding: 15px;\r\n\t\tborder-radius: 15px;\r\n\t}\r\n\r\n\th3 {\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t\tcolor: #fff;\r\n\t}\r\n`;\r\n\r\nexport default QuestionWrapper;\r\n","import styled from 'styled-components';\r\nimport { Line } from 'rc-progress';\r\n\r\nconst ProgressBar = styled(Line)`\r\n\tposition: sticky;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n`;\r\n\r\nexport default ProgressBar;\r\n","import styled from 'styled-components';\r\nimport Particles from 'react-particles-js';\r\n\r\nconst StyledParticles = styled(Particles)`\r\n\tposition: fixed;\r\n\tz-index: -1;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n`;\r\n\r\nexport default StyledParticles;\r\n","import React, { useContext } from 'react';\r\n\r\n// Component Imports\r\nimport Choices from '../Choices/Choices.component';\r\n\r\n// Styled Components Imports\r\nimport QuestionWrapper from '../../styled-components/QuestionWrapper.styledcomponent';\r\nimport ProgressBar from '../../styled-components/ProgressBar.styledcomponent';\r\nimport StyledParticles from '../../styled-components/StyledParticles.styledcomponent';\r\n\r\n// Context Imports\r\nimport PercentContext from '../../context/PercentContext';\r\n\r\n// Utility Imports\r\nimport he from 'he';\r\n\r\nconst QuestionComponent = ({ questions }) => {\r\n\tconst percent = useContext(PercentContext);\r\n\tconst colors = [\r\n\t\t'red',\r\n\t\t'orange',\r\n\t\t'yellow',\r\n\t\t'green',\r\n\t\t'blue',\r\n\t\t'indigo',\r\n\t\t'violet',\r\n\t];\r\n\r\n\tconst styledParticlesOptions = {\r\n\t\tparticles: {\r\n\t\t\tnumber: {\r\n\t\t\t\tvalue: 25,\r\n\t\t\t},\r\n\t\t\tsize: {\r\n\t\t\t\tvalue: 3,\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ProgressBar\r\n\t\t\t\tpercent={percent.percent}\r\n\t\t\t\tstrokeWidth='2'\r\n\t\t\t\tstrokeColor='#00BFFF'\r\n\t\t\t/>\r\n\t\t\t{questions.map((item, index) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tcategory,\r\n\t\t\t\t\tquestion,\r\n\t\t\t\t\tcorrect_answer,\r\n\t\t\t\t\tincorrect_answers,\r\n\t\t\t\t} = item;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<QuestionWrapper\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborder: `2px solid ${\r\n\t\t\t\t\t\t\t\tcolors[Math.floor(Math.random() * colors.length)]\r\n\t\t\t\t\t\t\t}`,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<h3>{category.toUpperCase()}</h3>\r\n\t\t\t\t\t\t<p>{he.unescape(question)}</p>\r\n\t\t\t\t\t\t<StyledParticles params={styledParticlesOptions} />\r\n\t\t\t\t\t\t<Choices\r\n\t\t\t\t\t\t\tcorrectAnswer={correct_answer}\r\n\t\t\t\t\t\t\twrongAnswers={incorrect_answers}\r\n\t\t\t\t\t\t\tanswers={[correct_answer, ...incorrect_answers]}\r\n\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</QuestionWrapper>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default QuestionComponent;\r\n","import styled from 'styled-components';\r\n\r\nconst ScoreWrapper = styled.div`\r\n\ttext-align: center;\r\n\tborder-radius: 15px;\r\n\tbackground-color: #fff;\r\n\tpadding: 20px 0;\r\n\tmargin-bottom: 20px;\r\n\tborder: 2px solid black;\r\n`;\r\n\r\nexport default ScoreWrapper;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n\theight: auto;\r\n\twidth: auto;\r\n\toutline: none;\r\n\tborder: none;\r\n\tbackground-color: #1b1b1b;\r\n\tcolor: white;\r\n\tpadding: 20px;\r\n\tfont-family: Dank Mono;\r\n\tfont-size: 25px;\r\n\tborder-radius: 15px;\r\n`;\r\n\r\nexport default StyledButton;","import React, { useContext } from 'react';\r\n\r\n// Styled Components Imports\r\nimport ScoreWrapper from '../../styled-components/ScoreWrapper.styledcomponent';\r\nimport StyledButton from '../../styled-components/StyledButton.styledcomponent';\r\n\r\n// Context Imports\r\nimport PercentContext from '../../context/PercentContext';\r\nimport ScoreContext from '../../context/ScoreContext';\r\n\r\n// Utility Imports\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Score = ({ fetchQuestionsOnLoad }) => {\r\n\tconst percent = useContext(PercentContext);\r\n\tconst score = useContext(ScoreContext);\r\n\tconst history = useHistory();\r\n\tconst { pathname } = history.location;\r\n\tconst milktea = `${pathname}YEYMILKTEAA`;\r\n\r\n\treturn (\r\n\t\t<ScoreWrapper>\r\n\t\t\t<h1>Score: {score.score} out of 10</h1>\r\n\r\n\t\t\t{score.score >= 6 && percent.percent === 100 ? (\r\n\t\t\t\t<StyledButton onClick={() => history.push(milktea)}>\r\n\t\t\t\t\tCLAIM MILKTEA!!!\r\n\t\t\t\t</StyledButton>\r\n\t\t\t) : (\r\n\t\t\t\t<StyledButton\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tfetchQuestionsOnLoad();\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tstyle={\r\n\t\t\t\t\t\tpercent.percent === 100\r\n\t\t\t\t\t\t\t? { display: '' }\r\n\t\t\t\t\t\t\t: { display: 'none' }\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\tTRY AGAIN\r\n\t\t\t\t</StyledButton>\r\n\t\t\t)}\r\n\t\t</ScoreWrapper>\r\n\t);\r\n};\r\n\r\nexport default Score;\r\n","import Loader from 'react-loader-spinner';\r\nimport styled from 'styled-components';\r\n\r\nconst LoaderWrapper = styled(Loader)`\r\n\tmargin-top: 300px;\r\n`;\r\n\r\nexport default LoaderWrapper;","import React, { useEffect, useState } from 'react';\r\n\r\n// Component Imports\r\nimport Question from '../Question/Question.component';\r\nimport Score from '../Score/Score.component';\r\n\r\n// Styled Components Imports\r\nimport LoaderWrapper from '../../styled-components/LoaderWrapper.styledcomponent';\r\n\r\n// Context Imports\r\nimport ScoreContext from '../../context/ScoreContext';\r\nimport PercentContext from '../../context/PercentContext';\r\n\r\nconst QuestionsComponent = () => {\r\n\tconst [questions, setQuestions] = useState([]);\r\n\tconst [isLoaded, setIsLoaded] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\tconst [percent, setPercent] = useState(0);\r\n\r\n\tconst addPercent = () => {\r\n\t\tsetPercent(percent + 10);\r\n\t};\r\n\r\n\tconst addScore = () => {\r\n\t\tsetScore(score + 1);\r\n\t};\r\n\r\n\tconst fetchQuestionsOnLoad = async () => {\r\n\t\tconst fetchQuestions = await fetch(\r\n\t\t\t'https://opentdb.com/api.php?amount=10&type=multiple'\r\n\t\t);\r\n\t\tconst response = await fetchQuestions.json();\r\n\t\tsetQuestions(response.results);\r\n\t\tsetIsLoaded(true);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchQuestionsOnLoad();\r\n\t}, []);\r\n\r\n\treturn isLoaded ? (\r\n\t\t<div>\r\n\t\t\t<PercentContext.Provider value={{ percent, addPercent }}>\r\n\t\t\t\t<ScoreContext.Provider value={{ score, addScore }}>\r\n\t\t\t\t\t<Question questions={questions} />\r\n\t\t\t\t\t<Score fetchQuestionsOnLoad={fetchQuestionsOnLoad} />\r\n\t\t\t\t</ScoreContext.Provider>\r\n\t\t\t</PercentContext.Provider>\r\n\t\t</div>\r\n\t) : (\r\n\t\t<LoaderWrapper\r\n\t\t\ttype='Grid'\r\n\t\t\tcolor='#00BFFF'\r\n\t\t\theight={100}\r\n\t\t\twidth={100}\r\n\t\t\ttimeout={3000}\r\n\t\t/>\r\n\t);\r\n};\r\nexport default QuestionsComponent;\r\n","import React from 'react';\r\n\r\nconst MilkteaComponent = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<img\r\n\t\t\t\talt='milktea'\r\n\t\t\t\tsrc='https://i.pinimg.com/originals/7e/44/aa/7e44aa732691c034a8300a2670966898.jpg'\r\n\t\t\t\tstyle={{marginTop: \"50px\"}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MilkteaComponent;\r\n","import React from 'react';\r\nimport Questions from './components/Questions/Questions.component';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Milktea from './components/Milktea/Milktea.component';\r\nconst App = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ReactAudioPlayer\r\n\t\t\t\tsrc='https://www.bensound.com/bensound-music/bensound-thejazzpiano.mp3'\r\n\t\t\t\tautoPlay\r\n\t\t\t\tloop\r\n\t\t\t/>\r\n\t\t\t<ReactAudioPlayer\r\n\t\t\t\tid='wrong-answer'\r\n\t\t\t\tsrc='https://freesound.org/people/KevinVG207/sounds/331912/download/331912__kevinvg207__wrong-buzzer.wav'\r\n\t\t\t/>\r\n\t\t\t<ReactAudioPlayer\r\n\t\t\t\tid='correct-answer'\r\n\t\t\t\tsrc='https://freesound.org/people/JapanYoshiTheGamer/sounds/361263/download/361263__japanyoshithegamer__8-bit-correct-answer.wav'\r\n\t\t\t/>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path='/react-quiz' component={Questions} />\r\n\t\t\t\t<Route exact path='/react-quiz/YEYMILKTEAA' component={Milktea} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport styled from 'styled-components';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nconst AppWrapper = styled.div`\r\n\tdisplay: flex;\r\n\theight: auto;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tfont-family: Dank Mono;\r\n`;\r\n\r\nReactDOM.render(\r\n\t<Router>\r\n\t\t<AppWrapper>\r\n\t\t\t<App />\r\n\t\t</AppWrapper>\r\n\t</Router>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}