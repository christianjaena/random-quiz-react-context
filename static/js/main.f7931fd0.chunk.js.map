{"version":3,"sources":["context/ScoreContext.js","components/Choices/Choices.component.jsx","components/Question/Question.component.jsx","components/Score/Score.component.jsx","components/Questions/Questions.component.jsx","App.js","index.js"],"names":["ScoreContext","createContext","addScore","ChoicesWrapper","styled","div","ChoicesComponent","correctAnswer","answers","useState","isAnswersShown","setAnswersShown","choices","setChoices","useContext","mapNumsToLetters","1","2","3","4","useEffect","_","shuffle","showAnswer","item","backgroundColor","pointerEvents","map","idx","key","onClick","answer","style","toUpperCase","he","unescape","QuestionWrapper","QuestionComponent","questions","colors","index","category","question","correct_answer","incorrect_answers","border","Math","floor","random","length","wrongAnswers","ScoreWrapper","Score","score","QuestionsComponent","setQuestions","setScore","a","fetch","fetchQuestions","json","response","results","Provider","value","App","AppWrapper","ReactDOM","render","document","getElementById"],"mappings":"yOAIeA,EAFMC,wBAAc,CAACC,SAAU,e,+VCI9C,IAAMC,EAAiBC,IAAOC,IAAV,KA0DLC,EA5CU,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,QAAc,EACdC,oBAAS,GADK,mBACjDC,EADiD,KACjCC,EADiC,OAE1BF,mBAAS,IAFiB,mBAEjDG,EAFiD,KAExCC,EAFwC,KAIlDX,EAAWY,qBAAWd,GACtBe,EAAmB,CACxBC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,KAGJC,qBAAU,WACTP,EAAWQ,IAAEC,QAAQd,MACnB,IAEH,IAOMe,EAAa,SAAAC,GAClB,OAAOjB,IAAkBiB,EAAO,CAAEC,gBAAiB,UAAWC,cAAc,QAAW,CAAED,gBAAiB,YAG3G,OACC,6BACEb,EAAQe,KAAI,SAACH,EAAMI,GACnB,OACC,kBAACzB,EAAD,CACC0B,IAAKD,EACLE,QAAS,kBAjBMC,EAiBWP,EAhB9Bb,GAAgB,QACZoB,IAAWxB,GACdL,KAHiB,IAAC6B,GAkBfC,MAAOtB,EAAiBa,EAAWC,GAAQ,MAE1CT,EAAiBa,EAAM,GAAGK,cAL5B,IAK4CC,IAAGC,SAASX,S,wrBCnD7D,IAAMY,EAAkBhC,IAAOC,IAAV,KA6DNgC,EA9BW,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAEtBC,EAAS,CAAC,MAAO,SAAU,SAAU,QAAS,OAAQ,SAAU,UAEtE,OACC,6BACED,EAAUX,KAAI,SAACH,EAAMgB,GAAW,IAE/BC,EAIGjB,EAJHiB,SACAC,EAGGlB,EAHHkB,SACAC,EAEGnB,EAFHmB,eACAC,EACGpB,EADHoB,kBAED,OACC,kBAACR,EAAD,CAAiBJ,MAAO,CAACa,OAAO,aAAD,OAAeN,EAAOO,KAAKC,MAAMD,KAAKE,SAAWT,EAAOU,WAAapB,IAAKW,GACxG,4BAAKC,GACL,2BAAIP,IAAGC,SAASO,IAChB,kBAAC,EAAD,CACCnC,cAAeoC,EACfO,aAAcN,EACdpC,QAAO,CAAGmC,GAAH,mBAAsBC,IAC7BJ,MAAOA,U,yNCtDd,IAAMW,EAAe/C,IAAOC,IAAV,KAkBH+C,EATD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAChB,OACC,kBAACF,EAAD,KACC,sCAAYE,EAAZ,cACA,iECgBYC,EA3BY,WAAO,IAAD,EACE7C,mBAAS,IADX,mBACzB6B,EADyB,KACdiB,EADc,OAEN9C,mBAAS,GAFH,mBAEzB4C,EAFyB,KAElBG,EAFkB,KAkBhC,OAVApC,qBAAU,YACM,uCAAG,8BAAAqC,EAAA,sEACYC,MAC5B,uDAFgB,cACXC,EADW,gBAIMA,EAAeC,OAJrB,OAIXC,EAJW,OAKjBN,EAAaM,EAASC,SALL,2CAAH,qDAOfxB,KACE,IAEF,6BACC,kBAAC,EAAayB,SAAd,CAAuBC,MAhBR,WAChBR,EAASH,EAAQ,KAgBf,kBAAC,EAAD,CAAUf,UAAWA,KAEtB,kBAAC,EAAD,CAAOe,MAAOA,MClBFY,EARH,WACX,OACC,6BACC,kBAAC,EAAD,Q,6LCDH,IAAMC,EAAa9D,IAAOC,IAAV,KAShB8D,IAASC,OACR,kBAACF,EAAD,KACC,kBAAC,EAAD,OAEDG,SAASC,eAAe,W","file":"static/js/main.f7931fd0.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst ScoreContext = createContext({addScore: () => {}});\r\n\r\nexport default ScoreContext;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport ScoreContext from '../../context/ScoreContext';\r\nimport _ from 'lodash';\r\nimport he from 'he';\r\nimport styled from 'styled-components'\r\n\r\nconst ChoicesWrapper = styled.div`\r\n\tborder: 1px solid #444;\r\n\twidth: auto;\r\n\tpadding: 20px 40px;\r\n\tmargin: 10px;\r\n\tborder-radius: 15px;\r\n\tcursor: pointer;\r\n\r\n\t&:hover {\r\n\t\tbackground-color: #e9ebee;\r\n\t\tfont-weight: bold;\t\r\n\t\ttransition: 0.2ms ease-in-out\r\n\t}\r\n`\r\nconst ChoicesComponent = ({ correctAnswer, answers }) => {\r\n\tconst [isAnswersShown, setAnswersShown] = useState(false);\r\n\tconst [choices, setChoices] = useState([]);\r\n\r\n\tconst addScore = useContext(ScoreContext);\r\n\tconst mapNumsToLetters = {\r\n\t\t1: 'a',\r\n\t\t2: 'b',\r\n\t\t3: 'c',\r\n\t\t4: 'd',\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetChoices(_.shuffle(answers));\r\n\t}, []);\r\n\r\n\tconst pickAnswer = (answer, index) => {\r\n\t\tsetAnswersShown(true);\r\n\t\tif (answer === correctAnswer) {\r\n\t\t\taddScore();\r\n\t\t}\r\n\t};\r\n\r\n\tconst showAnswer = item => {\r\n\t\treturn correctAnswer === item ? { backgroundColor: '#458728', pointerEvents:'none' } : { backgroundColor: '#BD2A2A' };\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{choices.map((item, idx) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ChoicesWrapper\r\n\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\tonClick={() => pickAnswer(item)}\r\n\t\t\t\t\t\tstyle={isAnswersShown ? showAnswer(item) : null}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{mapNumsToLetters[idx + 1].toUpperCase()}.{he.unescape(item)}\r\n\t\t\t\t\t</ChoicesWrapper>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChoicesComponent;\r\n","import React from 'react';\r\nimport Choices from '../Choices/Choices.component';\r\nimport he from 'he';\r\nimport styled from 'styled-components';\r\n\r\nconst QuestionWrapper = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\ttext-align: center;\r\n\tflex-direction: column;\r\n\tbackground-color: #fff;\r\n\r\n\t-webkit-box-shadow: 10px 10px 35px -16px rgba(0, 0, 0, 0.75);\r\n\t-moz-box-shadow: 10px 10px 35px -16px rgba(0, 0, 0, 0.75);\r\n\tbox-shadow: 10px 10px 35px -16px rgba(0, 0, 0, 0.75);\r\n\tpadding: 20px;\r\n\tborder-radius: 20px;\r\n\tmargin: 20px;\r\n\tmargin-bottom: 50px;\r\n\r\n\tp {\r\n\t\tword-break: break-word;\r\n\t\tfont-size: 18px;\r\n\t\tcolor: #fff;\r\n\t\tbackground-color: #1b1b1b;\r\n\t\tpadding: 15px;\r\n\t\tborder-radius: 15px;\r\n\t}\r\n\r\n\th3 {\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t}\r\n`;\r\n\r\nconst QuestionComponent = ({ questions }) => {\r\n\r\n\tconst colors = ['red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'violet'];\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{questions.map((item, index) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tcategory,\r\n\t\t\t\t\tquestion,\r\n\t\t\t\t\tcorrect_answer,\r\n\t\t\t\t\tincorrect_answers,\r\n\t\t\t\t} = item;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<QuestionWrapper style={{border: `2px solid ${colors[Math.floor(Math.random() * colors.length)]}`}} key={index}>\r\n\t\t\t\t\t\t<h3>{category}</h3>\r\n\t\t\t\t\t\t<p>{he.unescape(question)}</p>\r\n\t\t\t\t\t\t<Choices\r\n\t\t\t\t\t\t\tcorrectAnswer={correct_answer}\r\n\t\t\t\t\t\t\twrongAnswers={incorrect_answers}\r\n\t\t\t\t\t\t\tanswers={[correct_answer, ...incorrect_answers]}\r\n\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</QuestionWrapper>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default QuestionComponent;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ScoreWrapper = styled.div`\r\n\ttext-align: center;\r\n\tborder-radius: 15px;\r\n\tbackground-color: #fff;\r\n\tpadding: 20px 0;\r\n\tmargin-bottom: 20px;\r\n\tborder: 2px solid black;\r\n`;\r\n\r\nconst Score = ({ score }) => {\r\n\treturn (\r\n\t\t<ScoreWrapper>\r\n\t\t\t<h1>Score: {score} out of 10</h1>\r\n\t\t\t<p>Refresh to answer new questions!</p>\r\n\t\t</ScoreWrapper>\r\n\t);\r\n};\r\n\r\nexport default Score;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Question from '../Question/Question.component';\r\nimport Score from '../Score/Score.component';\r\nimport ScoreContext from '../../context/ScoreContext';\r\n\r\nconst QuestionsComponent = () => {\r\n\tconst [questions, setQuestions] = useState([]);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst addScore = () => {\r\n\t\tsetScore(score + 1);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst questions = async () => {\r\n\t\t\tconst fetchQuestions = await fetch(\r\n\t\t\t\t'https://opentdb.com/api.php?amount=10&type=multiple'\r\n\t\t\t);\r\n\t\t\tconst response = await fetchQuestions.json();\r\n\t\t\tsetQuestions(response.results);\r\n\t\t};\r\n\t\tquestions();\r\n\t}, []);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ScoreContext.Provider value={addScore}>\r\n\t\t\t\t<Question questions={questions} />\r\n\t\t\t</ScoreContext.Provider>\r\n\t\t\t<Score score={score} />\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default QuestionsComponent;\r\n","import React from 'react';\r\nimport Questions from './components/Questions/Questions.component';\r\nconst App = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Questions />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport styled from 'styled-components';\r\nconst AppWrapper = styled.div`\r\n\tdisplay: flex;\r\n\theight: auto;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tfont-family: Dank Mono;\r\n\t\r\n`;\r\n\r\nReactDOM.render(\r\n\t<AppWrapper>\r\n\t\t<App />\r\n\t</AppWrapper>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}